Concepts of Programming Languages
Master Course - Hochschule Rosenheim - WS 2018/2019
04 Oct 2018
Tags: go, programming, master

Johannes Weigend
QAware GmbH
johannes.weigend@qaware.de
http://www.qaware.de
@johannesweigend

* Languages
.image ./img/00-programming-languages.jpeg


* Course Requirements
- The course is intended as a master course. 
- Solid programming skills in Java/C/C++ are required. 
- Assumed that students have introductory skills in Scala, Phython or Ruby.
- For all code examples, we will use Go (Golang) as language.

* Goal of the Course

.image img/go.png
- Learn how Golang differs conceptional from other languages
- Get solid skills to pick the right language for a given problem
- Know the concepts of languages
- Learn how to write professional code with Golang

* Lessons

Lesson 1 - *Introduction*
Why Go? History, Concepts, Comparison to C/C++/Java/Python/Ruby/Scala/JS

Lesson 2 - *Basic* *Language* *Overview*
Control Structures, Functions, Pointers, Tooling, Testing and Errorhandling

Lesson 3 - *OOP* *with* *Go*
Concepts and Differences to other Languages

Lesson 4 - *Functional* *Programming*
Arrays and Slices, Maps, Functional Programming

Lesson 5 - *Fuctional* *Parsers*
Parser Combinators with Go

Lesson 6 - *Parallel* *Programming* - Part I
Go Routines, Channels

* Lessons

Lesson 7 - *Parallel* *Programming* - Part II
Synchronization with Locks

Lesson 8 - *Distributed* *Programming* - Part I
GRPC

Lesson 9 - *Distributed* *Programming* - Part II
Blockchain, Encryption, Security

Lesson 10 - *Microservices*
Microservices with Go, RESTful APIs

Lesson 11 - *System* *Programming*
Reimplementing Docker with Go

Lesson 12 - *Summary*
Picking the appropriate language for a given problem


* Structure of this course
- Recap - 15 min 
- Lecture - 30 min
- Online Tutorials (Video) - 45 min
- Student Discussions - 30 min
- Introduction to Exercises -  15 min
- Exercises - 45 min (+ Homework)

* Semester Work
15 Minutes presentation + 5-10 pages Asciidoc document (written in English)

- Compare *PP* (Procedural Programming) in Go with:
    C
    Modula 
    Ada 

- Compare *OOP* (Object Oriented Programming) in Go with:
    Smalltalk 
    C++ 
    Eiffel 
    Objective C 

- Compare *FP* (Functional Programming) in Go with:
    Haskell 
    Clojure 
    F# 

* Semester Work

- Compare Go *Concurrency* with:
    Erlang 
    Scala Actors 
    D 
    Occam 

- Compare *Go* with:
    Rust 
    Swift 
    JavaScript 
    Ruby 
    Python 
    Kotlin 
 

* Books
Donovan, Kernigham: The Go Programming Language 
.image https://d3by36x8sj6cra.cloudfront.net/assets/images/book/large/9780/1341/9780134190440.jpg 200 200

Sebesta: Concepts of Programming Languages 
.image https://img.yumpu.com/59461192/1/358x441/concepts-of-programming-languages-robert-w-sebesta.jpg?quality=85 200 200