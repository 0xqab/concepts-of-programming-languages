Go Programming - OOP Part II
Concepts of Programming Languages
24 Oct 2019
Tags: go, programming, master

Bernhard Saumweber
Rosenheim Technical University
bernhard.saumweber@qaware.de
http://www.qaware.de

* Embedding
- Go does not support inheritance: Go supports embedding of other structs.
.code ../oop/polymorphism/polymorphism.go /Point/,8

.code ../oop/polymorphism/polymorphism.go /ColorPoint/,19

.code ../oop/polymorphism/polymorphism.go /cp.x/,35

- In Java this can be done with delegation.
- Syntactically it is similar to inheritance in Java
- Access to embedded field is identical to a normal field inside a struct
- Overriding of methods is supported, overloading is not!

* Interfaces and Polymorphism
.play ../oop/polymorphism/polymorphism.go /func main/,/END2 OMIT/

* Send Mail with Go: A minimal Interface
.code ../oop/mail/mail.go /Address/,/END OMIT/
- A example interface for a service-oriented component

* A type implements an interface when providing the required methods
.code ../oop/mail/smtp/sender.go /Package/,/END OMIT/
- Import references fully qualified VC directories in $GOPATH/src

* The Go interface can be used as in Java
.code ../oop/mail/client/client.go /Package/,/EOF OMIT/

* Summary
- Several interfaces can be put together to form an interface
- Go does not support inheritance but type embedding (delegation without syntactic ballast)
- Go supports polymorphism only via interfaces, not through classes
- Interfaces with one method end with the ending "er" (Stringer, Writer, Reader...)
.link https://youtu.be/Ng8m5VXsn8Q?t=414

* Exercise 3
.image img/03-exercise.png 600 800

* Exercise 
- Implement the UML diagram with Go
- The Paint() method should print the names and values of the fields to the console
- Allocate an array of polymorph objects and call Paint() in a loop 
.link https://github.com/jweigend/concepts-of-programming-languages/blob/master/docs/exercises/Exercise3.md 

* Questions
- What is the difference between inheritance in Java and embedding in Go?
- How does Go support multiple inheritance? Is is supported for interfaces and types?
